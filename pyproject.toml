[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "multi-tenant-data-ingestion"
version = "1.0.0"
description = "Enterprise-grade multi-tenant data ingestion framework"
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
authors = [
    {name = "Data Engineering Team", email = "data-engineering@company.com"},
]
keywords = [
    "data-engineering",
    "multi-tenant",
    "databricks",
    "unity-catalog",
    "iceberg",
    "aws",
    "pyspark"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy>=2.0.0",
    "pydantic>=2.5.0",
    "boto3>=1.34.0",
    "pandas>=2.1.0",
    "pyarrow>=14.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.6.0",
]
databricks = [
    "databricks-sql-connector>=3.0.0",
    "databricks-cli>=0.214.0",
    "delta-spark>=3.0.0",
]
monitoring = [
    "prometheus-client>=0.19.0",
    "structlog>=23.2.0",
]

[project.urls]
Homepage = "https://github.com/your-org/multi-tenant-data-ingestion-framework"
Documentation = "https://github.com/your-org/multi-tenant-data-ingestion-framework/docs"
Repository = "https://github.com/your-org/multi-tenant-data-ingestion-framework"
"Bug Tracker" = "https://github.com/your-org/multi-tenant-data-ingestion-framework/issues"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=services",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "-v"
]

[tool.coverage.run]
source = ["services"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
